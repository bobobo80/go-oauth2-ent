// Code generated by ent, DO NOT EDIT.

package oauthtoken

import (
	"time"
)

const (
	// Label holds the string label denoting the oauthtoken type in the database.
	Label = "oauth_token"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldExpiredAt holds the string denoting the expired_at field in the database.
	FieldExpiredAt = "expired_at"
	// FieldCode holds the string denoting the code field in the database.
	FieldCode = "code"
	// FieldAccess holds the string denoting the access field in the database.
	FieldAccess = "access"
	// FieldRefresh holds the string denoting the refresh field in the database.
	FieldRefresh = "refresh"
	// FieldData holds the string denoting the data field in the database.
	FieldData = "data"
	// Table holds the table name of the oauthtoken in the database.
	Table = "oauth_tokens"
)

// Columns holds all SQL columns for oauthtoken fields.
var Columns = []string{
	FieldID,
	FieldExpiredAt,
	FieldCode,
	FieldAccess,
	FieldRefresh,
	FieldData,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultExpiredAt holds the default value on creation for the "expired_at" field.
	DefaultExpiredAt func() time.Time
	// DefaultCode holds the default value on creation for the "code" field.
	DefaultCode string
	// CodeValidator is a validator for the "code" field. It is called by the builders before save.
	CodeValidator func(string) error
	// DefaultAccess holds the default value on creation for the "access" field.
	DefaultAccess string
	// AccessValidator is a validator for the "access" field. It is called by the builders before save.
	AccessValidator func(string) error
	// DefaultRefresh holds the default value on creation for the "refresh" field.
	DefaultRefresh string
	// RefreshValidator is a validator for the "refresh" field. It is called by the builders before save.
	RefreshValidator func(string) error
	// DataValidator is a validator for the "data" field. It is called by the builders before save.
	DataValidator func(string) error
)
